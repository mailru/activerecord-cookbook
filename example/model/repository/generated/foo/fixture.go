// Code generated by argen. DO NOT EDIT.
// This code was generated from a template.
//
// Manual changes to this file may cause unexpected behavior in your application.
// Manual changes to this file will be overwritten if the code is regenerated.
//
// Generate info: argen@v1.5.3-4-gd9702e9 (Commit: d9702e9f)
package foo

import (
	"context"
	"log"

	"gopkg.in/yaml.v3"

	"github.com/mailru/activerecord/pkg/activerecord"
)

type FooFT struct {
}

func MarshalFixtures(objs []*Foo) ([]byte, error) {
	fts := make([]FooFT, 0, len(objs))
	for _, obj := range objs {
		_ = obj
		fts = append(fts, FooFT{})
	}
	return yaml.Marshal(fts)
}

func UnmarshalFixtures(source []byte) []*Foo {
	var fixtures []FooFT

	if err := yaml.Unmarshal(source, &fixtures); err != nil {
		log.Fatalf("unmarshal FooFT fixture: %v", err)
	}

	objs := make([]*Foo, 0, len(fixtures))

	for _, ft := range fixtures {
		_ = ft
		o := New(context.Background())

		objs = append(objs, o)
	}

	return objs
}

func (objs FooList) String() string {
	o, err := MarshalFixtures(objs)
	if err != nil {
		activerecord.Logger().Fatal(context.Background(), err)
	}
	return string(o)
}
